A) Definisi REST web Service
: REST (Representational State Transfer) adalah
salah satu gaya arsitektur yang dapat diadaptasi
ketika membangun web service. REST menggunakan
pola request-response dalam berinteraksi. Dalam
implementasinya arsitektur REST benar-benar memisahkan
peran client dan server.

    A.1) RESTful API
    : Web service yang menerapkan arsitektur REST. 
        
        A.1.1) Ciri-ciri REST API
            A.1.1.1) Client-Server
            : Server harus bisa merespons permintaan yang
            dilakukan client, baik itu response berhasil ataupun  
            response gagal.

            A.1.1.2) Stateless
            : REST API tidak boleh menyimpan keadaan (state)
            apa pun terkait client. Seluruh
            state harus tetap disimpan di client. Artinya tidak ada
            session di REST API.

            A.1.1.3) Cacheable
            : Cache berfungsi agar response permintaan dapat diambil dengan cepat.
            Karena tidak mengambil dari database kembali.

            A.1.1.4) Layered
            : Ketika REST API server memiliki arsitektur yang kompleks, client seharusnya
            tidak perlu tahu bagaimana server melayaninya.

B) Format Request dan Response
: REST API seringnya menggunakan JSON(Javascript object notation) sebagai format
data baik itu pada request ataupun response. Agar REST API selalu merespons dengan
format JSON, pastikan setiap response terdapat property Content-Type dengan nilai
application/json

C) HTTP Verbs
    C.1) Verbs/ Method
        C.1.1) GET
        : Mendapatkan data

        C.1.2) POST
        : Mengirimkan data 

        C.1.3) PUT
        : Memperbarui data

        C.1.4) DELETE
        : Menghapus data

    C.2) HTTP Response code
        C.2.1) 200 (OK)
        : Permintaan client berhasil dijalankan oleh server

        C.2.2) 201 (Created)
        : Server berhasil membuat/menambahkan resource yang diminta client.

        C.2.3) 400 (Bad Request)
        : Permintaan client gagal dijalankan karena proses validasi input
        dari client gagal

        C.2.4) 403 (Forbidden)
        : Permintaan client gagal dijalankan karena ia tidak memiliki
        hak akses ke resource yang diminta

        C.2.5) 404 (Not Found)
        : Permintaan client gagal dijalankan karena resource yang
        diminta tidak ditemukan

        C.2.6) 500 (Internal Server Error)
        : Server mengalami Error

D) URL Design
    D.1) Gunakan Kata Benda daripada kata kerja pada endpoint Perintah
    : Hindari penggunaan kata kerja contoh /getArticles atau
    /addArticles. Karena aksi dapat ditentukan oleh HTTP Verb, 
    seperti GET/articles atau POST/articles

    D.2) Gunakan kata jamak pada endpoints untuk resource collection
    : Selalu gunakan akta plural saat memberikan nama endpoint. Bila ingin
    mengakses satu data saja gunakan path parameter contohj /articles/:id

    D.3) Gunakan endpoint berantai untuk resource yang memiliki hirarki/relasi
    